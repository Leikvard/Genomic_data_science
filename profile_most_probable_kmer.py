DNA = 'TGTGTCATGAGAAACACGGGTTGAGCCCCGAATATGTCAACTCCTGATATCACACAGAGGTACTGCTGTGCCCCTAAGACGAGTGTCAAGGATTATAGTACAAGGCCCCATTTAGTGCCGAGACAGCACCTGCTGACTAATTCGTAGAGATGAGCCCATGTATTAAATAGTGTATGGCCCAGTTCTTGCAGGACAACAGGAAGTCTCGCAACGTCTACTAATGTCTGTGGCTGTTTGACGATAAGACAATTCTGGAAGGGAAAATGAGACTCTACCGGTACGGTGTTACGAACCGTAATTAAAAGTAATTTAGAAACACCACGGAGTGTACGATATACGGTGAGCTCGGTAGCTCGCATGACAGCCCCACTTCAACTGGTCGGGGTGCATCACAGCCTAGCCGGATCCACAGGTGAAGTCCACCTACCCCTACTACAGAGAATCAAACAATCGATCCGTTGGGCATCGTTGAACAGCGATGATCAACCCACAGCAGTTATAATGGCACAACGGCTGTGCAACCTGATGGATCCACTTATCGAATCTTTATCTCCCTTTCGGTGCTTACAAGATTCGTTCAACTTGGGCCTGCGGCTGGGCTGATGCACTACCCAGCTAACGATTGGTACACGCATGTACTGGGTCATGTTTCTCCACGCTCGTCATATCAAAAAATAACCGATGCAGTATGTTTGACAGCTTTATACCCATAATTCCTATCTCCGCTTCTACCCCCCGGTGGTAGCCGTTTCCTTCTAGTGGTCACGCACATTTCCAGGCCGAGACTCTATGACACCTCTCGCGGAGAGAGCATGATTCAACCTCCAGTAGCCATTAGATAATCGTAATGCGGTTATTAGACATTTTCATTCGATGCCGTCCGTCCCTAATACATCGAATAATGGAGTTGGAGTCTTGTCATTATATAAGACATTCTCGGCGGATCGCGAATCACGGGCAATCATCCTTGGGGACTGAACGTACGATATGGGGTCAACCT'
M = [[0.254, 0.225, 0.239, 0.225, 0.268, 0.239, 0.254, 0.141, 0.197, 0.225, 0.310, 0.324, 0.254, 0.254], [0.366, 0.239, 0.239, 0.282, 0.225, 0.183, 0.254, 0.268, 0.225, 0.268, 0.296, 0.169, 0.225, 0.282], [0.225, 0.183, 0.254, 0.239, 0.282, 0.268, 0.268, 0.310, 0.254, 0.324, 0.183, 0.352, 0.282, 0.197], [0.155, 0.352, 0.268, 0.254, 0.225, 0.310, 0.225, 0.282, 0.324, 0.183, 0.211, 0.155, 0.239, 0.268]]
k = 14

def kmer(text, i, k):
	s = text[i:i+k]
	return s

def ProfileMostProbablekmer(dna, k, m):
	L = len(dna)
	p = [1] * (L - k + 1)
	d = {'A': 0, 'C': 1, 'G': 2, 'T': 3}
	for i in range(L - k + 1):
		for j in range(k):
			p[i] *= m[d[dna[i + j]]][j]
	maxp = max(p)
	for i in range(L - k + 1):
		if p[i] == maxp:
			pattern = kmer(dna, i, k)
	return pattern

print ProfileMostProbablekmer(DNA, k, M)
